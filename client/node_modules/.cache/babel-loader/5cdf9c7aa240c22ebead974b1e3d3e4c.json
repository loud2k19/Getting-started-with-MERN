{"ast":null,"code":"var _jsxFileName = \"/home/himesh/Desktop/project/product/node/learn/social/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\"; // import ProfileTop from \"./ProfileTop\";\n// import ProfileAbout from \"./ProfileAbout\";\n// import ProfileExperience from \"./ProfileExperience\";\n// import ProfileEducation from \"./ProfileEducation\";\n// import ProfileGithub from \"./ProfileGithub\";\n\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, profile !== profile ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 44\n    }\n  }, \"profile\")) //           {auth.isAuthenticated &&\n  //             auth.loading === false &&\n  //             auth.user._id === profile.user._id && (\n  //               <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n  //                 Edit Profile\n  //               </Link>\n  //             )}\n  //           <div className=\"profile-grid my-1\">\n  //             <ProfileTop profile={profile} />\n  //             <ProfileAbout profile={profile} />\n  //             <div className=\"profile-exp bg-white p-2\">\n  //               <h2 className=\"text-primary\">Experience</h2>\n  //               {profile.experience.length > 0 ? (\n  //                 <Fragment>\n  //                   {profile.experience.map(experience => (\n  //                     <ProfileExperience\n  //                       key={experience._id}\n  //                       experience={experience}\n  //                     />\n  //                   ))}\n  //                 </Fragment>\n  //               ) : (\n  //                 <h4>No experience credentials</h4>\n  //               )}\n  //             </div>\n  //             <div className=\"profile-edu bg-white p-2\">\n  //               <h2 className=\"text-primary\">Education</h2>\n  //               {profile.education.length > 0 ? (\n  //                 <Fragment>\n  //                   {profile.education.map(education => (\n  //                     <ProfileEducation\n  //                       key={education._id}\n  //                       education={education}\n  //                     />\n  //                   ))}\n  //                 </Fragment>\n  //               ) : (\n  //                 <h4>No education credentials</h4>\n  //               )}\n  //             </div>\n  //             {profile.githubusername && (\n  //               <ProfileGithub username={profile.githubusername} />\n  //             )}\n  //           </div>\n  //         </Fragment>\n  //       )}\n  //     </Fragment>\n  ;\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/himesh/Desktop/project/product/node/learn/social/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,cADe;AAEfE,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACP,cAAD,EAAiBK,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAKA,OAAZ,gBAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,gBAAoC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADvC,CADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AArDF;AAuDD,CAjED;;AAmEAD,OAAO,CAACO,SAAR,GAAoB;AAClBR,EAAAA,cAAc,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADb;AAElBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFR;AAGlBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADiB;AAEhCE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFoB,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\n// import ProfileTop from \"./ProfileTop\";\n// import ProfileAbout from \"./ProfileAbout\";\n// import ProfileExperience from \"./ProfileExperience\";\n// import ProfileEducation from \"./ProfileEducation\";\n// import ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile !== profile ? <Spinner /> : <Fragment>profile</Fragment>}\n    </Fragment>\n\n    //           {auth.isAuthenticated &&\n    //             auth.loading === false &&\n    //             auth.user._id === profile.user._id && (\n    //               <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n    //                 Edit Profile\n    //               </Link>\n    //             )}\n    //           <div className=\"profile-grid my-1\">\n    //             <ProfileTop profile={profile} />\n    //             <ProfileAbout profile={profile} />\n    //             <div className=\"profile-exp bg-white p-2\">\n    //               <h2 className=\"text-primary\">Experience</h2>\n    //               {profile.experience.length > 0 ? (\n    //                 <Fragment>\n    //                   {profile.experience.map(experience => (\n    //                     <ProfileExperience\n    //                       key={experience._id}\n    //                       experience={experience}\n    //                     />\n    //                   ))}\n    //                 </Fragment>\n    //               ) : (\n    //                 <h4>No experience credentials</h4>\n    //               )}\n    //             </div>\n\n    //             <div className=\"profile-edu bg-white p-2\">\n    //               <h2 className=\"text-primary\">Education</h2>\n    //               {profile.education.length > 0 ? (\n    //                 <Fragment>\n    //                   {profile.education.map(education => (\n    //                     <ProfileEducation\n    //                       key={education._id}\n    //                       education={education}\n    //                     />\n    //                   ))}\n    //                 </Fragment>\n    //               ) : (\n    //                 <h4>No education credentials</h4>\n    //               )}\n    //             </div>\n\n    //             {profile.githubusername && (\n    //               <ProfileGithub username={profile.githubusername} />\n    //             )}\n    //           </div>\n    //         </Fragment>\n    //       )}\n    //     </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}