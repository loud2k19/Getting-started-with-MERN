{"ast":null,"code":"var _jsxFileName = \"/home/himesh/Desktop/project/product/node/learn/social/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  });\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/himesh/Desktop/project/product/node/learn/social/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","Profile","profile","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,cAAF;AAAkBE,EAAAA,OAAO,EAAE;AAAEA,IAAAA;AAAF,GAA3B;AAAwCC,EAAAA,IAAxC;AAA8CC,EAAAA;AAA9C,CAAD,KAA2D;AACzEd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACN,cAAD,EAAiBI,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4DD,CAjED;;AAmEAL,OAAO,CAACM,SAAR,GAAoB;AAClBP,EAAAA,cAAc,EAAET,SAAS,CAACiB,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAEX,SAAS,CAACmB,MAAV,CAAiBD,UAFR;AAGlBN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADiB;AAEhCC,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFoB,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACkB,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {/* {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )} */}\n      {/* <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map(education => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div> */}\n\n      {/* //     </Fragment> */}\n      {/* //   )} */}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}