{"ast":null,"code":"var _jsxFileName = \"/home/himesh/Desktop/project/product/node/learn/social/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), \" \\u0BB5\\u0BA3\\u0B95\\u0BCD\\u0B95\\u0BAE\\u0BCD \", user && user.name), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"has\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \" \", \"you have not set your profile , it would be nice for others to hear about you\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"how to create profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n  profile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/home/himesh/Desktop/project/product/node/learn/social/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getCurrentProfile","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBD,EAAAA,iBADiB;AAEjBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kDAC2CD,IAAI,IAAIA,IAAI,CAACG,IADxD,CAFF,EAKGF,OAAO,KAAK,IAAZ,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,kFADF,eAME,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,CARJ,CAHF;AAwBD,CAjCD;;AAmCAH,SAAS,CAACM,SAAV,GAAsB;AACpBP,EAAAA,iBAAiB,EAAEJ,SAAS,CAACY,IAAV,CAAeC,UADd;AAEpBP,EAAAA,IAAI,EAAEN,SAAS,CAACY,IAAV,CAAeC,UAFD;AAGpBL,EAAAA,OAAO,EAAER,SAAS,CAACY,IAAV,CAAeC;AAHJ,CAAtB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADoB;AAEhCE,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFiB,CAAL,CAA7B;;AAKA,eAAeP,OAAO,CAACa,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/spinner\";\n\nimport { getCurrentProfile } from \"../../actions/profile\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> வணக்கம் {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>has</Fragment>\n      ) : (\n        <Fragment>\n          <p>\n            {\" \"}\n            you have not set your profile , it would be nice for others to hear\n            about you\n          </p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            how to create profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n  profile: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}